(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[20],{

/***/ "./node_modules/react-accessible-accordion/dist/umd/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-accessible-accordion/dist/umd/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(/*! react */ \"./node_modules/react/index.js\")) :\n\tundefined;\n}(this, (function (exports,React) { 'use strict';\n\n\tvar React__default = 'default' in React ? React['default'] : React;\n\n\tfunction unwrapExports (x) {\n\t\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n\t}\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\n\tvar emptyFunction_1 = emptyFunction;\n\n\tvar emptyFunction$1 = /*#__PURE__*/Object.freeze({\n\t\tdefault: emptyFunction_1,\n\t\t__moduleExports: emptyFunction_1\n\t});\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\n\tvar validateFormat = function validateFormat(format) {};\n\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\n\tvar invariant_1 = invariant;\n\n\tvar invariant$1 = /*#__PURE__*/Object.freeze({\n\t\tdefault: invariant_1,\n\t\t__moduleExports: invariant_1\n\t});\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\n\tvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n\tvar ReactPropTypesSecret$1 = /*#__PURE__*/Object.freeze({\n\t\tdefault: ReactPropTypesSecret_1,\n\t\t__moduleExports: ReactPropTypesSecret_1\n\t});\n\n\tvar emptyFunction$2 = ( emptyFunction$1 && emptyFunction_1 ) || emptyFunction$1;\n\n\tvar invariant$2 = ( invariant$1 && invariant_1 ) || invariant$1;\n\n\tvar ReactPropTypesSecret$2 = ( ReactPropTypesSecret$1 && ReactPropTypesSecret_1 ) || ReactPropTypesSecret$1;\n\n\tvar factoryWithThrowingShims = function () {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret$2) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant$2(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n\t  }  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  }  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\n\t  ReactPropTypes.checkPropTypes = emptyFunction$2;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\n\t  return ReactPropTypes;\n\t};\n\n\tvar factoryWithThrowingShims$1 = /*#__PURE__*/Object.freeze({\n\t\tdefault: factoryWithThrowingShims,\n\t\t__moduleExports: factoryWithThrowingShims\n\t});\n\n\tvar require$$0 = ( factoryWithThrowingShims$1 && factoryWithThrowingShims ) || factoryWithThrowingShims$1;\n\n\tvar propTypes = createCommonjsModule(function (module) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t{\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = require$$0();\n\t}\n\t});\n\n\tvar propTypes$1 = /*#__PURE__*/Object.freeze({\n\t\tdefault: propTypes,\n\t\t__moduleExports: propTypes\n\t});\n\n\tvar _propTypes = ( propTypes$1 && propTypes ) || propTypes$1;\n\n\tvar lib = createCommonjsModule(function (module, exports) {\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\texports.__esModule = true;\n\n\n\n\tvar _react2 = _interopRequireDefault(React__default);\n\n\n\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\n\tfunction _interopRequireDefault(obj) {\n\t  return obj && obj.__esModule ? obj : { default: obj };\n\t}\n\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\n\tfunction _possibleConstructorReturn(self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n\t}\n\n\tfunction _inherits(subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n\t  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t}\n\n\tfunction createEventEmitter(value) {\n\t  var handlers = [];\n\t  return {\n\t    on: function on(handler) {\n\t      handlers.push(handler);\n\t    },\n\t    off: function off(handler) {\n\t      handlers = handlers.filter(function (h) {\n\t        return h !== handler;\n\t      });\n\t    },\n\t    get: function get() {\n\t      return value;\n\t    },\n\t    set: function set(newValue) {\n\t      value = newValue;\n\t      handlers.forEach(function (handler) {\n\t        return handler(value);\n\t      });\n\t    }\n\t  };\n\t}\n\n\tfunction onlyChild(children) {\n\t  return Array.isArray(children) ? children[0] : children;\n\t}\n\n\tvar uniqueId = 0;\n\n\tfunction createReactContext(defaultValue) {\n\t  var _Provider$childContex, _Consumer$contextType;\n\n\t  var contextProp = '__create-react-context-' + uniqueId++ + '__';\n\n\t  var Provider = function (_Component) {\n\t    _inherits(Provider, _Component);\n\n\t    function Provider() {\n\t      var _temp, _this, _ret;\n\n\t      _classCallCheck(this, Provider);\n\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\n\t      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);\n\t    }\n\n\t    Provider.prototype.getChildContext = function getChildContext() {\n\t      var _ref;\n\n\t      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n\t    };\n\n\t    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\t      if (this.props.value !== nextProps.value) {\n\t        this.emitter.set(nextProps.value);\n\t      }\n\t    };\n\n\t    Provider.prototype.render = function render() {\n\t      return this.props.children;\n\t    };\n\n\t    return Provider;\n\t  }(React__default.Component);\n\n\t  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);\n\n\t  var Consumer = function (_Component2) {\n\t    _inherits(Consumer, _Component2);\n\n\t    function Consumer() {\n\t      var _temp2, _this2, _ret2;\n\n\t      _classCallCheck(this, Consumer);\n\n\t      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        args[_key2] = arguments[_key2];\n\t      }\n\n\t      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {\n\t        value: _this2.getValue()\n\t      }, _this2.onUpdate = function () {\n\t        _this2.setState({\n\t          value: _this2.getValue()\n\t        });\n\t      }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n\t    }\n\n\t    Consumer.prototype.componentDidMount = function componentDidMount() {\n\t      if (this.context[contextProp]) {\n\t        this.context[contextProp].on(this.onUpdate);\n\t      }\n\t    };\n\n\t    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {\n\t      if (this.context[contextProp]) {\n\t        this.context[contextProp].off(this.onUpdate);\n\t      }\n\t    };\n\n\t    Consumer.prototype.getValue = function getValue() {\n\t      if (this.context[contextProp]) {\n\t        return this.context[contextProp].get();\n\t      } else {\n\t        return defaultValue;\n\t      }\n\t    };\n\n\t    Consumer.prototype.render = function render() {\n\t      return onlyChild(this.props.children)(this.state.value);\n\t    };\n\n\t    return Consumer;\n\t  }(React__default.Component);\n\n\t  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);\n\n\t  return {\n\t    Provider: Provider,\n\t    Consumer: Consumer\n\t  };\n\t}\n\n\texports.default = createReactContext;\n\tmodule.exports = exports['default'];\n\t});\n\n\tvar createReactContext = unwrapExports(lib);\n\n\tvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\t  return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n\t} : function (obj) {\n\t  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n\t};\n\n\tfunction _possibleConstructorReturn(self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n\t}\n\n\tfunction _inherits(subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));\n\t  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t}\n\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\n\tvar StateContext = createReactContext(null);\n\n\tvar Container = function () {\n\t  function Container() {\n\t    var _this = this;\n\n\t    _classCallCheck(this, Container);\n\n\t    this._listeners = [];\n\n\t    CONTAINER_DEBUG_CALLBACKS.forEach(function (cb) {\n\t      return cb(_this);\n\t    });\n\t  }\n\n\t  Container.prototype.setState = function setState(updater, callback) {\n\t    var _this2 = this;\n\n\t    return Promise.resolve().then(function () {\n\t      var nextState = void 0;\n\n\t      if (typeof updater === 'function') {\n\t        nextState = updater(_this2.state);\n\t      } else {\n\t        nextState = updater;\n\t      }\n\n\t      if (nextState == null) {\n\t        if (callback) callback();\n\t        return;\n\t      }\n\n\t      _this2.state = Object.assign({}, _this2.state, nextState);\n\n\t      var promises = _this2._listeners.map(function (listener) {\n\t        return listener();\n\t      });\n\n\t      return Promise.all(promises).then(function () {\n\t        if (callback) {\n\t          return callback();\n\t        }\n\t      });\n\t    });\n\t  };\n\n\t  Container.prototype.subscribe = function subscribe(fn) {\n\t    this._listeners.push(fn);\n\t  };\n\n\t  Container.prototype.unsubscribe = function unsubscribe(fn) {\n\t    this._listeners = this._listeners.filter(function (f) {\n\t      return f !== fn;\n\t    });\n\t  };\n\n\t  return Container;\n\t}();\n\n\tvar DUMMY_STATE = {};\n\n\tvar Subscribe = function (_React$Component) {\n\t  _inherits(Subscribe, _React$Component);\n\n\t  function Subscribe() {\n\t    var _temp, _this3, _ret;\n\n\t    _classCallCheck(this, Subscribe);\n\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return _ret = (_temp = (_this3 = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this3), _this3.state = {}, _this3.instances = [], _this3.unmounted = false, _this3.onUpdate = function () {\n\t      return new Promise(function (resolve) {\n\t        if (!_this3.unmounted) {\n\t          _this3.setState(DUMMY_STATE, resolve);\n\t        } else {\n\t          resolve();\n\t        }\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this3, _ret);\n\t  }\n\n\t  Subscribe.prototype.componentWillUnmount = function componentWillUnmount() {\n\t    this.unmounted = true;\n\t    this._unsubscribe();\n\t  };\n\n\t  Subscribe.prototype._unsubscribe = function _unsubscribe() {\n\t    var _this4 = this;\n\n\t    this.instances.forEach(function (container) {\n\t      container.unsubscribe(_this4.onUpdate);\n\t    });\n\t  };\n\n\t  Subscribe.prototype._createInstances = function _createInstances(map, containers) {\n\t    var _this5 = this;\n\n\t    this._unsubscribe();\n\n\t    if (map === null) {\n\t      throw new Error('You must wrap your <Subscribe> components with a <Provider>');\n\t    }\n\n\t    var safeMap = map;\n\t    var instances = containers.map(function (ContainerItem) {\n\t      var instance = void 0;\n\n\t      if ((typeof ContainerItem === 'undefined' ? 'undefined' : _typeof(ContainerItem)) === 'object' && ContainerItem instanceof Container) {\n\t        instance = ContainerItem;\n\t      } else {\n\t        instance = safeMap.get(ContainerItem);\n\n\t        if (!instance) {\n\t          instance = new ContainerItem();\n\t          safeMap.set(ContainerItem, instance);\n\t        }\n\t      }\n\n\t      instance.unsubscribe(_this5.onUpdate);\n\t      instance.subscribe(_this5.onUpdate);\n\n\t      return instance;\n\t    });\n\n\t    this.instances = instances;\n\t    return instances;\n\t  };\n\n\t  Subscribe.prototype.render = function render() {\n\t    var _this6 = this;\n\n\t    return React__default.createElement(StateContext.Consumer, null, function (map) {\n\t      return _this6.props.children.apply(null, _this6._createInstances(map, _this6.props.to));\n\t    });\n\t  };\n\n\t  return Subscribe;\n\t}(React__default.Component);\n\n\tfunction Provider(props) {\n\t  return React__default.createElement(StateContext.Consumer, null, function (parentMap) {\n\t    var childMap = new Map(parentMap);\n\n\t    if (props.inject) {\n\t      props.inject.forEach(function (instance) {\n\t        childMap.set(instance.constructor, instance);\n\t      });\n\t    }\n\n\t    return React__default.createElement(StateContext.Provider, { value: childMap }, props.children);\n\t  });\n\t}\n\n\tvar CONTAINER_DEBUG_CALLBACKS = [];\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\tfunction _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$1(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$1(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar AccordionContainer = function (_Container) {\n\t    _inherits$1(AccordionContainer, _Container);\n\n\t    function AccordionContainer() {\n\t        var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t        _classCallCheck$1(this, AccordionContainer);\n\n\t        var _this = _possibleConstructorReturn$1(this, (AccordionContainer.__proto__ || Object.getPrototypeOf(AccordionContainer)).call(this));\n\n\t        _this.setAccordion = function (accordion) {\n\t            if (accordion !== _this.state.accordion) {\n\t                return _this.setState({ accordion: accordion });\n\t            }\n\t            return null;\n\t        };\n\n\t        _this.setOnChange = function (onChange) {\n\t            if (onChange !== _this.state.onChange) {\n\t                return _this.setState({ onChange: onChange });\n\t            }\n\t            return null;\n\t        };\n\n\t        _this.addItem = function (newItem) {\n\t            // Need to use callback style otherwise race-conditions are created by concurrent registrations.\n\t            _this.setState(function (state) {\n\t                var items = void 0;\n\n\t                if (state.items.some(function (item) {\n\t                    return item.uuid === newItem.uuid;\n\t                })) {\n\t                    // eslint-disable-next-line no-console\n\t                    console.error('AccordionItem error: One item already has the uuid \"' + newItem.uuid + '\". Uuid property must be unique. See: https://github.com/springload/react-accessible-accordion#accordionitem');\n\t                }\n\t                if (state.accordion && newItem.expanded) {\n\t                    // If this is a true accordion and the new item is expanded, then the others must be closed.\n\t                    items = [].concat(_toConsumableArray(state.items.map(function (item) {\n\t                        return _extends({}, item, {\n\t                            expanded: false\n\t                        });\n\t                    })), [newItem]);\n\t                } else {\n\t                    items = [].concat(_toConsumableArray(state.items), [newItem]);\n\t                }\n\t                return {\n\t                    items: items\n\t                };\n\t            });\n\t        };\n\n\t        _this.removeItem = function (key) {\n\t            return _this.setState(function (state) {\n\t                return {\n\t                    items: state.items.filter(function (item) {\n\t                        return item.uuid !== key;\n\t                    })\n\t                };\n\t            });\n\t        };\n\n\t        _this.setExpanded = function (key, expanded) {\n\t            return _this.setState(function (state) {\n\t                return {\n\t                    items: state.items.map(function (item) {\n\t                        if (item.uuid === key) {\n\t                            return _extends({}, item, {\n\t                                expanded: expanded\n\t                            });\n\t                        }\n\t                        if (state.accordion && expanded) {\n\t                            // If this is an accordion, we might need to collapse the other expanded item.\n\t                            return _extends({}, item, {\n\t                                expanded: false\n\t                            });\n\t                        }\n\t                        return item;\n\t                    })\n\t                };\n\t            }).then(function () {\n\t                if (_this.state.accordion) {\n\t                    _this.state.onChange(key);\n\t                } else {\n\t                    _this.state.onChange(_this.state.items.filter(function (item) {\n\t                        return item.expanded;\n\t                    }).map(function (item) {\n\t                        return item.uuid;\n\t                    }));\n\t                }\n\t            });\n\t        };\n\n\t        _this.state = _extends({\n\t            items: [],\n\t            accordion: true,\n\t            onChange: function onChange() {}\n\t        }, args);\n\t        return _this;\n\t    }\n\n\t    return AccordionContainer;\n\t}(Container);\n\n\tvar _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\tvar accordionDefaultProps = {\n\t    accordion: true\n\t};\n\n\tvar Accordion = function Accordion(_ref) {\n\t    var accordion = _ref.accordion,\n\t        rest = _objectWithoutProperties(_ref, ['accordion']);\n\n\t    return React__default.createElement('div', _extends$1({ role: accordion ? 'tablist' : null }, rest));\n\t};\n\tAccordion.defaultProps = accordionDefaultProps;\n\n\tvar _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _objectWithoutProperties$1(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\tfunction _classCallCheck$2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$2(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$2(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar defaultProps = {\n\t    accordion: true,\n\t    onChange: function onChange() {},\n\t    className: 'accordion',\n\t    children: null\n\t};\n\n\tvar AccordionWrapper = function (_Component) {\n\t    _inherits$2(AccordionWrapper, _Component);\n\n\t    function AccordionWrapper() {\n\t        var _ref;\n\n\t        var _temp, _this, _ret;\n\n\t        _classCallCheck$2(this, AccordionWrapper);\n\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\n\t        return _ret = (_temp = (_this = _possibleConstructorReturn$2(this, (_ref = AccordionWrapper.__proto__ || Object.getPrototypeOf(AccordionWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.accordionStore = new AccordionContainer({\n\t            accordion: _this.props.accordion,\n\t            onChange: _this.props.onChange\n\t        }), _this.renderAccordion = function (accordionStore) {\n\t            var _this$props = _this.props,\n\t                accordion = _this$props.accordion,\n\t                onChange = _this$props.onChange,\n\t                rest = _objectWithoutProperties$1(_this$props, ['accordion', 'onChange']);\n\n\t            return React__default.createElement(Accordion, _extends$2({ accordion: accordionStore.state.accordion }, rest));\n\t        }, _temp), _possibleConstructorReturn$2(_this, _ret);\n\t    }\n\n\t    _createClass(AccordionWrapper, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.accordionStore.setAccordion(this.props.accordion);\n\t            this.accordionStore.setOnChange(this.props.onChange);\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate() {\n\t            this.accordionStore.setAccordion(this.props.accordion);\n\t            this.accordionStore.setOnChange(this.props.onChange);\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React__default.createElement(\n\t                Provider,\n\t                { inject: [this.accordionStore] },\n\t                React__default.createElement(\n\t                    Subscribe,\n\t                    { to: [AccordionContainer] },\n\t                    this.renderAccordion\n\t                )\n\t            );\n\t        }\n\t    }]);\n\n\t    return AccordionWrapper;\n\t}(React.Component);\n\n\tAccordionWrapper.defaultProps = defaultProps;\n\n\t/*!\n\t * consecutive\n\t * Get consecutive numbers\n\t * Copyright(c) 2017 ivanoff .$ curl -A cv ivanoff.org.ua\n\t * MIT Licensed\n\t */\n\n\tvar consecutive = function (begin, base, inc) {\n\t  var number = begin || 0;\n\t  if (typeof base !== 'number') base = 10;\n\t  if (typeof inc !== 'number') inc = 1;\n\n\t  return function () {\n\t    var res;\n\t    if (typeof base === 'undefined' || base === 10) {\n\t      res = number;\n\t      number += inc;\n\t    } else {\n\t      res = number.toString();\n\t      number = (parseInt(number, base) + inc).toString(base);\n\t    }\n\n\t    return res;\n\t  };\n\t};\n\n\tvar _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass$1 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck$3(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$3(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$3(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar nextUuid = consecutive();\n\tfunction resetNextUuid() {\n\t    nextUuid = consecutive();\n\t}\n\n\tvar ItemContainer = function (_Container) {\n\t    _inherits$3(ItemContainer, _Container);\n\n\t    function ItemContainer() {\n\t        var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t        _classCallCheck$3(this, ItemContainer);\n\n\t        var _this = _possibleConstructorReturn$3(this, (ItemContainer.__proto__ || Object.getPrototypeOf(ItemContainer)).call(this));\n\n\t        _this.state = _extends$3({}, args);\n\t        if (_this.state.uuid === undefined) {\n\t            _this.state.uuid = nextUuid();\n\t        }\n\t        return _this;\n\t    }\n\n\t    _createClass$1(ItemContainer, [{\n\t        key: 'setUuid',\n\t        value: function setUuid(customUuid) {\n\t            return this.setState({\n\t                uuid: customUuid\n\t            });\n\t        }\n\t    }]);\n\n\t    return ItemContainer;\n\t}(Container);\n\n\tvar classnames = createCommonjsModule(function (module) {\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\t/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\n\t(function () {\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction classNames() {\n\t\t\tvar classes = [];\n\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\n\t\t\t\tvar argType = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);\n\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn classes.join(' ');\n\t\t}\n\n\t\tif (module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (false) {} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t})();\n\t});\n\n\tvar _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass$2 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\tfunction _objectWithoutProperties$2(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\tfunction _classCallCheck$4(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$4(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$4(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar AccordionItem = function (_Component) {\n\t    _inherits$4(AccordionItem, _Component);\n\n\t    function AccordionItem() {\n\t        _classCallCheck$4(this, AccordionItem);\n\n\t        return _possibleConstructorReturn$4(this, (AccordionItem.__proto__ || Object.getPrototypeOf(AccordionItem)).apply(this, arguments));\n\t    }\n\n\t    _createClass$2(AccordionItem, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            var _props = this.props,\n\t                uuid = _props.uuid,\n\t                accordionStore = _props.accordionStore,\n\t                disabled = _props.disabled;\n\n\n\t            accordionStore.addItem({\n\t                uuid: uuid,\n\t                expanded: this.props.expanded || false,\n\t                disabled: disabled\n\t            });\n\t        }\n\t    }, {\n\t        key: 'componentWillUnmount',\n\t        value: function componentWillUnmount() {\n\t            this.props.accordionStore.removeItem(this.props.uuid);\n\t        }\n\n\t        // This is here so that the user can dynamically set the 'expanded' state using the 'expanded' prop.\n\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate(prevProps) {\n\t            var _props2 = this.props,\n\t                uuid = _props2.uuid,\n\t                expanded = _props2.expanded,\n\t                accordionStore = _props2.accordionStore;\n\n\t            if (expanded !== prevProps.expanded) {\n\t                accordionStore.setExpanded(uuid, expanded);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var _props3 = this.props,\n\t                uuid = _props3.uuid,\n\t                className = _props3.className,\n\t                hideBodyClassName = _props3.hideBodyClassName,\n\t                accordionStore = _props3.accordionStore,\n\t                disabled = _props3.disabled,\n\t                expanded = _props3.expanded,\n\t                rest = _objectWithoutProperties$2(_props3, ['uuid', 'className', 'hideBodyClassName', 'accordionStore', 'disabled', 'expanded']);\n\n\t            var currentItem = accordionStore.state.items.filter(function (item) {\n\t                return item.uuid === uuid;\n\t            })[0];\n\n\t            if (!currentItem) {\n\t                return null;\n\t            }\n\n\t            return React__default.createElement('div', _extends$4({\n\t                className: classnames(className, _defineProperty({}, hideBodyClassName, !currentItem.expanded && hideBodyClassName))\n\t            }, rest));\n\t        }\n\t    }]);\n\n\t    return AccordionItem;\n\t}(React.Component);\n\n\tvar _extends$5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass$3 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck$5(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$5(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$5(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar defaultProps$1 = {\n\t    className: 'accordion__item',\n\t    hideBodyClassName: '',\n\t    disabled: false,\n\t    expanded: false,\n\t    accordionStore: new AccordionContainer(),\n\t    uuid: undefined\n\t};\n\n\tvar AccordionItemWrapper = function (_Component) {\n\t    _inherits$5(AccordionItemWrapper, _Component);\n\n\t    function AccordionItemWrapper() {\n\t        var _ref;\n\n\t        var _temp, _this, _ret;\n\n\t        _classCallCheck$5(this, AccordionItemWrapper);\n\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\n\t        return _ret = (_temp = (_this = _possibleConstructorReturn$5(this, (_ref = AccordionItemWrapper.__proto__ || Object.getPrototypeOf(AccordionItemWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.itemContainer = new ItemContainer({\n\t            uuid: _this.props.uuid\n\t        }), _this.renderItem = function (accordionStore, itemStore) {\n\t            var uuid = itemStore.state.uuid;\n\n\t            return React__default.createElement(AccordionItem, _extends$5({}, _this.props, {\n\t                uuid: uuid,\n\t                accordionStore: accordionStore\n\t            }));\n\t        }, _temp), _possibleConstructorReturn$5(_this, _ret);\n\t    }\n\n\t    _createClass$3(AccordionItemWrapper, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            return React__default.createElement(\n\t                Provider,\n\t                { inject: [this.itemContainer] },\n\t                React__default.createElement(\n\t                    Subscribe,\n\t                    { to: [AccordionContainer, ItemContainer] },\n\t                    this.renderItem\n\t                )\n\t            );\n\t        }\n\t    }]);\n\n\t    return AccordionItemWrapper;\n\t}(React.Component);\n\n\tAccordionItemWrapper.defaultProps = defaultProps$1;\n\n\tvar _extends$6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass$4 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\tfunction _objectWithoutProperties$3(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\tfunction _classCallCheck$6(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$6(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$6(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar AccordionItemTitle = function (_Component) {\n\t    _inherits$6(AccordionItemTitle, _Component);\n\n\t    function AccordionItemTitle() {\n\t        var _ref;\n\n\t        var _temp, _this, _ret;\n\n\t        _classCallCheck$6(this, AccordionItemTitle);\n\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\n\t        return _ret = (_temp = (_this = _possibleConstructorReturn$6(this, (_ref = AccordionItemTitle.__proto__ || Object.getPrototypeOf(AccordionItemTitle)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function () {\n\t            var _this$props = _this.props,\n\t                uuid = _this$props.uuid,\n\t                expanded = _this$props.expanded,\n\t                setExpanded = _this$props.setExpanded;\n\n\n\t            setExpanded(uuid, !expanded);\n\t        }, _this.handleKeyPress = function (evt) {\n\t            if (evt.charCode === 13 || evt.charCode === 32) {\n\t                evt.preventDefault();\n\t                _this.handleClick();\n\t            }\n\t        }, _temp), _possibleConstructorReturn$6(_this, _ret);\n\t    }\n\n\t    _createClass$4(AccordionItemTitle, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            var _props = this.props,\n\t                className = _props.className,\n\t                hideBodyClassName = _props.hideBodyClassName,\n\t                accordionStore = _props.accordionStore,\n\t                item = _props.item,\n\t                accordion = _props.accordion,\n\t                setExpanded = _props.setExpanded,\n\t                expanded = _props.expanded,\n\t                uuid = _props.uuid,\n\t                disabled = _props.disabled,\n\t                rest = _objectWithoutProperties$3(_props, ['className', 'hideBodyClassName', 'accordionStore', 'item', 'accordion', 'setExpanded', 'expanded', 'uuid', 'disabled']);\n\n\t            var id = 'accordion__title-' + uuid;\n\t            var ariaControls = 'accordion__body-' + uuid;\n\t            var role = accordion ? 'tab' : 'button';\n\t            var titleClassName = classnames(className, _defineProperty$1({}, hideBodyClassName, hideBodyClassName && !expanded));\n\n\t            if (role === 'tab') {\n\t                return React__default.createElement('div', _extends$6({\n\t                    id: id,\n\t                    'aria-selected': expanded,\n\t                    'aria-controls': ariaControls,\n\t                    className: titleClassName,\n\t                    onClick: disabled ? undefined : this.handleClick,\n\t                    role: role,\n\t                    tabIndex: '0' // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n\t                    , onKeyPress: this.handleKeyPress,\n\t                    disabled: disabled\n\t                }, rest));\n\t            }\n\t            return React__default.createElement('div', _extends$6({\n\t                id: id,\n\t                'aria-expanded': expanded,\n\t                'aria-controls': ariaControls,\n\t                className: titleClassName,\n\t                onClick: disabled ? undefined : this.handleClick,\n\t                role: role,\n\t                tabIndex: '0' // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n\t                , onKeyPress: this.handleKeyPress,\n\t                disabled: disabled\n\t            }, rest));\n\t        }\n\t    }]);\n\n\t    return AccordionItemTitle;\n\t}(React.Component);\n\n\tAccordionItemTitle.accordionElementName = 'AccordionItemTitle';\n\n\tvar _extends$7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass$5 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck$7(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$7(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$7(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar AccordionItemTitleWrapper = function (_Component) {\n\t    _inherits$7(AccordionItemTitleWrapper, _Component);\n\n\t    function AccordionItemTitleWrapper() {\n\t        var _ref;\n\n\t        var _temp, _this, _ret;\n\n\t        _classCallCheck$7(this, AccordionItemTitleWrapper);\n\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\n\t        return _ret = (_temp = (_this = _possibleConstructorReturn$7(this, (_ref = AccordionItemTitleWrapper.__proto__ || Object.getPrototypeOf(AccordionItemTitleWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.renderItemTitle = function (accordionStore, itemStore) {\n\t            var uuid = itemStore.state.uuid;\n\t            var _accordionStore$state = accordionStore.state,\n\t                items = _accordionStore$state.items,\n\t                accordion = _accordionStore$state.accordion;\n\n\t            var item = items.filter(function (stateItem) {\n\t                return stateItem.uuid === uuid;\n\t            })[0];\n\n\t            return React__default.createElement(AccordionItemTitle, _extends$7({}, _this.props, item, {\n\t                setExpanded: accordionStore.setExpanded,\n\t                accordion: accordion\n\t            }));\n\t        }, _temp), _possibleConstructorReturn$7(_this, _ret);\n\t    }\n\n\t    _createClass$5(AccordionItemTitleWrapper, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            return React__default.createElement(\n\t                Subscribe,\n\t                { to: [AccordionContainer, ItemContainer] },\n\t                this.renderItemTitle\n\t            );\n\t        }\n\t    }]);\n\n\t    return AccordionItemTitleWrapper;\n\t}(React.Component);\n\n\tAccordionItemTitleWrapper.defaultProps = {\n\t    className: 'accordion__title',\n\t    hideBodyClassName: ''\n\t};\n\n\tvar _extends$8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tfunction _defineProperty$2(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\tfunction _objectWithoutProperties$4(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\tvar AccordionItemBody = function AccordionItemBody(props) {\n\t    var className = props.className,\n\t        hideBodyClassName = props.hideBodyClassName,\n\t        uuid = props.uuid,\n\t        expanded = props.expanded,\n\t        disabled = props.disabled,\n\t        accordion = props.accordion,\n\t        rest = _objectWithoutProperties$4(props, ['className', 'hideBodyClassName', 'uuid', 'expanded', 'disabled', 'accordion']);\n\n\t    return React__default.createElement('div', _extends$8({\n\t        id: 'accordion__body-' + uuid,\n\t        className: classnames(className, _defineProperty$2({}, hideBodyClassName, !expanded)),\n\t        'aria-hidden': !expanded,\n\t        'aria-labelledby': 'accordion__title-' + uuid,\n\t        role: accordion ? 'tabpanel' : null\n\t    }, rest));\n\t};\n\n\tvar _extends$9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass$6 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck$8(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn$8(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits$8(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar AccordionItemBodyWrapper = function (_Component) {\n\t    _inherits$8(AccordionItemBodyWrapper, _Component);\n\n\t    function AccordionItemBodyWrapper() {\n\t        var _ref;\n\n\t        var _temp, _this, _ret;\n\n\t        _classCallCheck$8(this, AccordionItemBodyWrapper);\n\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\n\t        return _ret = (_temp = (_this = _possibleConstructorReturn$8(this, (_ref = AccordionItemBodyWrapper.__proto__ || Object.getPrototypeOf(AccordionItemBodyWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.renderItemBody = function (accordionStore, itemStore) {\n\t            var uuid = itemStore.state.uuid;\n\t            var _accordionStore$state = accordionStore.state,\n\t                items = _accordionStore$state.items,\n\t                accordion = _accordionStore$state.accordion;\n\n\t            var item = items.filter(function (stateItem) {\n\t                return stateItem.uuid === uuid;\n\t            })[0];\n\t            return React__default.createElement(AccordionItemBody, _extends$9({}, _this.props, item, {\n\t                accordion: accordion\n\t            }));\n\t        }, _temp), _possibleConstructorReturn$8(_this, _ret);\n\t    }\n\n\t    _createClass$6(AccordionItemBodyWrapper, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            return React__default.createElement(\n\t                Subscribe,\n\t                { to: [AccordionContainer, ItemContainer] },\n\t                this.renderItemBody\n\t            );\n\t        }\n\t    }]);\n\n\t    return AccordionItemBodyWrapper;\n\t}(React.Component);\n\n\tAccordionItemBodyWrapper.defaultProps = {\n\t    className: 'accordion__body',\n\t    hideBodyClassName: 'accordion__body--hidden'\n\t};\n\n\texports.Accordion = AccordionWrapper;\n\texports.AccordionItem = AccordionItemWrapper;\n\texports.AccordionItemTitle = AccordionItemTitleWrapper;\n\texports.AccordionItemBody = AccordionItemBodyWrapper;\n\texports.resetNextUuid = resetNextUuid;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/react-accessible-accordion/dist/umd/index.js?");

/***/ })

}]);